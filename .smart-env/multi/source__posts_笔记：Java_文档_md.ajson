
"smart_sources:source/_posts/笔记：Java 文档.md": {"path":"source/_posts/笔记：Java 文档.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"rcy761","at":1750512755392},"class_name":"SmartSource","last_import":{"mtime":1747478971665,"size":20400,"at":1750512755396,"hash":"rcy761"},"blocks":{"#---frontmatter---":[1,10],"#一、理论":[11,120],"#一、理论##1. Swagger":[13,64],"#一、理论##1. Swagger#1.1. Swagger 概述":[15,21],"#一、理论##1. Swagger#1.1. Swagger 概述#{1}":[17,21],"#一、理论##1. Swagger#1.2. Swagger 规范":[22,32],"#一、理论##1. Swagger#1.2. Swagger 规范#{1}":[24,32],"#一、理论##1. Swagger#1.3. Swagger 工具链":[33,57],"#一、理论##1. Swagger#1.3. Swagger 工具链#1.3.1. Swagger UI":[35,57],"#一、理论##1. Swagger#1.3. Swagger 工具链#1.3.1. Swagger UI#{1}":[37,57],"#一、理论##1. Swagger#1.4. Swagger Editor":[58,64],"#一、理论##1. Swagger#1.4. Swagger Editor#{1}":[60,64],"#一、理论##2. API 文档的书写方式":[65,104],"#一、理论##2. API 文档的书写方式#2.1. 手写 API 文档":[67,97],"#一、理论##2. API 文档的书写方式#2.1. 手写 API 文档#{1}":[69,97],"#一、理论##2. API 文档的书写方式#2.2. 自动生成 API 文档":[98,104],"#一、理论##2. API 文档的书写方式#2.2. 自动生成 API 文档#{1}":[100,104],"#一、理论##3. API 文档的下载方式":[105,120],"#一、理论##3. API 文档的下载方式#{1}":[107,120],"#二、实操":[121,669],"#二、实操##1. 使用 Springfox 生成 Swagger 2.0 文档":[123,155],"#二、实操##1. 使用 Springfox 生成 Swagger 2.0 文档#1.1. 引入相关依赖":[125,148],"#二、实操##1. 使用 Springfox 生成 Swagger 2.0 文档#1.1. 引入相关依赖#{1}":[127,148],"#二、实操##1. 使用 Springfox 生成 Swagger 2.0 文档#1.2. 标注相关注解":[149,155],"#二、实操##1. 使用 Springfox 生成 Swagger 2.0 文档#1.2. 标注相关注解#{1}":[151,155],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档":[156,607],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.1. 代码结构目录":[158,175],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.1. 代码结构目录#{1}":[159,175],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.2. 创建 Spring Web 项目":[176,184],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.2. 创建 Spring Web 项目#{1}":[178,178],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.2. 创建 Spring Web 项目#{2}":[179,181],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.2. 创建 Spring Web 项目#{3}":[182,184],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.3. 引入相关依赖":[185,201],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.3. 引入相关依赖#{1}":[187,201],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.4. 准备测试代码":[202,277],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.4. 准备测试代码#{1}":[204,277],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.5. 进行相关配置":[278,335],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.5. 进行相关配置#{1}":[280,335],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.6. 创建 Springdoc 配置类":[336,355],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.6. 创建 Springdoc 配置类#{1}":[338,355],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解":[356,600],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解":[358,540],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.1. @Tag":[360,387],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.1. @Tag#{1}":[362,387],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation":[388,443],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{1}":[390,416],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{2}":[417,418],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{3}":[419,420],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{4}":[421,422],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{5}":[423,425],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{6}":[426,428],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{7}":[429,431],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{8}":[432,434],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.2. @Operation#{9}":[435,443],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter":[444,478],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{1}":[446,456],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{2}":[457,458],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{3}":[459,460],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{4}":[461,462],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{5}":[463,464],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{6}":[465,470],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{7}":[471,472],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{8}":[473,475],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.3. @Parameter#{9}":[476,478],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.4. @RequestBody":[479,498],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.4. @RequestBody#{1}":[481,487],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.4. @RequestBody#{2}":[488,489],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.4. @RequestBody#{3}":[490,491],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.4. @RequestBody#{4}":[492,495],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.4. @RequestBody#{5}":[496,498],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.5. @ApiResponse":[499,517],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.5. @ApiResponse#{1}":[500,506],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.5. @ApiResponse#{2}":[507,508],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.5. @ApiResponse#{3}":[509,510],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.5. @ApiResponse#{4}":[511,514],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.5. @ApiResponse#{5}":[515,517],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.6. @Content":[518,540],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.1. Controller 注解#2.7.1.6. @Content#{1}":[520,540],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.2. Model 注解":[541,600],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.2. Model 注解#2.7.2.1. @Schema":[543,600],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.7. 标注相关注解#2.7.2. Model 注解#2.7.2.1. @Schema#{1}":[545,600],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.8. 访问 UI 文档":[601,607],"#二、实操##2. 使用 Springdoc 生成 OpenAPI 文档#2.8. 访问 UI 文档#{1}":[603,607],"#二、实操##3. 使用 Knife4j 生成 OpenAPI 文档":[608,632],"#二、实操##3. 使用 Knife4j 生成 OpenAPI 文档#{1}":[610,632],"#二、实操##4. 使用 Apifox":[633,669],"#二、实操##4. 使用 Apifox#4.1. 创建 Java 项目":[635,641],"#二、实操##4. 使用 Apifox#4.1. 创建 Java 项目#{1}":[637,641],"#二、实操##4. 使用 Apifox#4.2. 安装 Apifox 插件":[642,648],"#二、实操##4. 使用 Apifox#4.2. 安装 Apifox 插件#{1}":[644,648],"#二、实操##4. 使用 Apifox#4.3. 创建团队和项目":[649,655],"#二、实操##4. 使用 Apifox#4.3. 创建团队和项目#{1}":[651,655],"#二、实操##4. 使用 Apifox#4.4. 配置 Java 项目与 Apifox 项目映射关系":[656,662],"#二、实操##4. 使用 Apifox#4.4. 配置 Java 项目与 Apifox 项目映射关系#{1}":[658,662],"#二、实操##4. 使用 Apifox#4.5. 上传 Java 项目":[663,669],"#二、实操##4. 使用 Apifox#4.5. 上传 Java 项目#{1}":[665,669]},"outlinks":[{"title":"springfox-swagger-ui 依赖","target":"https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui","line":40},{"title":"在线编译器","target":"https://editor.swagger.io/","line":60},{"title":"http://localhost:8080/v3/api-docs.yaml","target":"http://localhost:8080/v3/api-docs.yaml","line":116},{"title":"springfox-swagger-ui 依赖","target":"https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui","line":127},{"title":"springfox-swagger2 依赖","target":"https://mvnrepository.com/artifact/io.springfox/springfox-swagger2","line":127},{"title":"spring-openapi-stater-webmvc-ui 依赖","target":"https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui","line":187},{"title":"knife4j-openapi3-jakarta-spring-boot-starter","target":"https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-openapi3-jakarta-spring-boot-starter","line":614},{"title":"Knife4j 增强模式","target":"https://doc.xiaominfo.com/docs/features/enhance","line":626}],"metadata":{"title":"笔记：文档框架","date":"2025-04-13","categories":["Java","文档框架"],"tags":null,"author":"霸天","layout":"post"}},